<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cart</title>
  <style>
    .cart-container {
      display: flex;
      justify-content: center;
      align-items: flex-start;
      width: 100%;
      padding: 20px;
      box-sizing: border-box;
    }
    .rectangles {
      display: grid;
      grid-template-columns: 70% 30%;
      grid-gap: 20px;
      width: 100%;
      max-width: 1200px;
    }
    .rectangle {
      background-color: #f2f2f2;
      border: 1px solid #000;
      padding: 20px;
      box-sizing: border-box;
    }
    .rectangle-left {
      grid-column: 1;
      max-height: 500px; /* Ajusta este valor según tus necesidades */
      overflow-y: auto;
    }
    .rectangle-right {
      grid-column: 2;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    .product {
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .product-img {
      max-width: 150px;
      height: auto;
      display: block;
      margin-right: 20px;
    }
    .product-details {
      flex: 1;
    }
    .product-details p {
      margin: 5px 0;
    }
    .product-actions {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }
    .delete-btn {
      background-color: transparent;
      border: none;
      color: red;
      cursor: pointer;
      font-size: 1.2em;
    }
    .qty-controls {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .qty-controls button {
      padding: 5px 10px;
      cursor: pointer;
    }
    .subtotal {
      font-weight: bold;
    }
    .progressBarIncomplete, .progressBarComplete {
    width: 100%;
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.wrapper {
    width: 100%;
    display: flex;
    justify-content: center;
}

.arrow-steps {
    display: flex;
    justify-content: space-between;
    width: 80%;
}

.arrow-steps .step {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    padding: 10px 20px;
    background: #d9d9d9;
    color: #333;
    text-align: center;
    text-transform: uppercase;
    transition: background 0.3s ease-in-out;
    margin-right: 5px;
    border-radius: 4px;
    white-space: nowrap;
    flex: 1;
}

.arrow-steps .step.current {
    background: #dc3545;;
    color: white;
}

.arrow-steps .step.done {
    background: #28a745;
    color: white;
}

.arrow-steps .step:last-child {
    margin-right: 0;
}

.arrow-steps .step::after {
    content: "";
    position: absolute;
    top: 0;
    right: -20px;
    width: 0;
    height: 0;
    border-top: 20px solid transparent;
    border-bottom: 20px solid transparent;
    border-left: 20px solid #d9d9d9;
    z-index: 2;
}

.arrow-steps .step.current::after {
    border-left-color: #dc3545;;
}

.arrow-steps .step.done::after {
    border-left-color: #28a745;
}

.arrow-steps .step:last-child::after {
    display: none;
}
  </style>
</head>
<body>

<div class="progressBarIncomplete">  
    <div class="wrapper">  
        <div class="arrow-steps clearfix">
            {{#if cart}}
                  <div class="step done"> <span>Selecciona un producto</span> </div>
                  <div class="step done"> <span>Abre tu carrito</span> </div>
                      {{#if deliverySelected}}
                        <div class="step done"> <span> Domicilio o recoger?</span> </div>
                      {{else}}
                        <div class="step current"> <span> Domicilio o recoger?</span> </div>
                      {{/if}}
                  {{else}}
                  <div class="step current"> <span>Selecciona un producto</span> </div>
                  <div class="step"> <span>Abre tu carrito</span> </div>
                  <div class="step" name="entregaElegida"> <span> Elige tipo de entrega</span> </div>
            {{/if}}
                <div class="step"> <span>Confirma tu pedido!</span> </div>
        </div>
    </div>
</div>

<div class="progressBarComplete" style="display: none;">  
    <div class="wrapper">  
        <div class="arrow-steps clearfix">
            {{#if cart}}
                  <div class="step done"> <span>Selecciona un producto</span> </div>
                  <div class="step done"> <span>Abre tu carrito</span> </div>
                  <div class="step done"> <span> Elige tipo de entrega</span> </div>
                  <div class="step current"> <span>Confirma tu pedido!</span> </div>
            {{else}}
                  <div class="step current"> <span>Selecciona un producto</span> </div>
                  <div class="step"> <span>Abre tu carrito</span> </div>
                  <div class="step done"> <span> Elige tipo de entrega</span> </div>
                  <div class="step"> <span>Confirma tu pedido!</span> </div>
            {{/if}}
        </div>
    </div>
</div>



  <div class="cart-container">
    <div class="rectangles">
      <div class="rectangle rectangle-left">
        {{#each cart}}
          <div class="product">
            <img class="product-img" src="{{this.urlimagen}}" alt="{{this.nombre}}">
            <div class="product-details">
              <p>{{this.nombre}}</p>
              <p>{{this.descripcion}}</p>
              <p>Precio: ${{this.precio}}</p>
              <div class="qty-controls">
                <button class="change-qty" data-cart-id="{{this.cartId}}" data-action="decrease">-</button>
                <span class="qty">{{this.cantidad}}</span>
                <button class="change-qty" data-cart-id="{{this.cartId}}" data-action="increase">+</button>
              </div>
              <p class="subtotal">Subtotal: ${{multiply this.precio this.cantidad}}</p>
            </div>
            <div class="product-actions">
              <button class="delete-btn" data-cart-id="{{this.cartId}}">&times;</button>
            </div>
          </div>
        {{else}}
          <p>No hay productos en el carrito.</p>
        {{/each}}
      </div>
      <div class="rectangle rectangle-right">
        <div>
          <h2>Resumen del Pedido</h2>
          <p>Total: ${{total cart}}</p>
        </div>
        <div>
          <h3>Opciones de Entrega</h3>
          <label>
            <input type="radio" name="deliveryOption" value="domicilio">
            Entrega a domicilio
          </label>
          <div id="direccionDomicilio" style="display: none;">
            <h4>Direcciones Guardadas</h4>
            {{#each direcciones}}
              <label>
                <input type="radio" name="direccion" value="{{this.id}}">
                {{this.direccionCliente}}
              </label><br>
            {{/each}}
            <button id="addDireccionBtn">Agregar nueva dirección</button>
            <div id="nuevaDireccion" style="display: none;">
              <input type="text" id="nuevaDireccionInput" placeholder="Nueva Dirección">
              <button id="saveDireccionBtn">Guardar Dirección</button>
            </div>
          </div>
          <label>
            <input type="radio" name="deliveryOption" value="tienda">
            Recoger en farmacia
          </label>
        </div>
        <button class="btn btn-success finalize-purchase">Finalizar compra</button>
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
  $(document).ready(function() {
    $('input[name="deliveryOption"]').change(function() {
      if ($(this).val() === 'domicilio') {
        $('#direccionDomicilio').show();
      } else {
        $('#direccionDomicilio').hide();
      }
    });

    $('#addDireccionBtn').click(function() {
      $('#nuevaDireccion').show();
    });

    $('#saveDireccionBtn').click(function() {
      const nuevaDireccion = $('#nuevaDireccionInput').val();
      if (nuevaDireccion) {
        $.ajax({
          url: '/links/addDireccion',
          type: 'POST',
          data: { direccion: nuevaDireccion },
          success: function(response) {
            if (response.success) {
              Swal.fire('Guardado!', 'Dirección guardada con éxito.', 'success').then(() => {
                location.reload();
              });
            } else {
              Swal.fire('Error!', response.message, 'error');
            }
          }
        });
      } else {
        Swal.fire('Error!', 'Por favor ingrese una dirección.', 'error');
      }
    });

    $('.delete-btn').click(function(e) {
      e.preventDefault();
      var cartId = $(this).data('cart-id');
      Swal.fire({
        title: '¿Estás seguro?',
        text: "No podrás revertir esto!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, eliminar!'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: '/links/cart/delete/' + cartId,
            type: 'POST',
            success: function(response) {
              Swal.fire(
                'Eliminado!',
                response.message,
                'success'
              ).then((result) => {
                if (result.isConfirmed || result.isDismissed) {
                  location.reload(); // Recarga la página para actualizar el estado del carrito
                }
              });
            },
            error: function(xhr, status, error) {
              Swal.fire(
                'Error!',
                'No se pudo eliminar el producto. Inténtalo de nuevo.',
                'error'
              );
            }
          });
        }
      });
    });

    $('.change-qty').click(function(e) {
      e.preventDefault();
      const cartId = $(this).data('cart-id');
      const action = $(this).data('action');
      const qtyDisplay = $(this).siblings('.qty');
      let currentQty = parseInt(qtyDisplay.text());

      if (action === 'increase') {
        currentQty++;
      } else if (action === 'decrease' && currentQty > 1) {
        currentQty--;
      }

      qtyDisplay.text(currentQty);

      const price = parseFloat($(this).closest('.product-details').find('p:nth-child(3)').text().replace('Precio: $', ''));
      const subtotal = price * currentQty;
      $(this).closest('.product').find('.subtotal').text(`Subtotal: $${subtotal.toFixed(2)}`);
      updateTotal();

      // Actualizar la cantidad en el servidor
      $.ajax({
        url: '/links/cart/update-qty/' + cartId,
        type: 'POST',
        data: { cantidad: currentQty },
        success: function(response) {
          if (!response.success) {
            Swal.fire('Error!', response.message, 'error');
          }
        },
        error: function(xhr, status, error) {
          Swal.fire('Error!', 'No se pudo actualizar la cantidad. Inténtalo de nuevo.', 'error');
        }
      });
    });

    function updateTotal() {
      let total = 0;
      $('.subtotal').each(function() {
        const subtotal = parseFloat($(this).text().replace('Subtotal: $', ''));
        total += subtotal;
      });
      $('.rectangle-right p').text(`Total: $${total.toFixed(2)}`);
    }

    $('.finalize-purchase').click(function(e) {
      e.preventDefault();
      const deliveryOption = $('input[name="deliveryOption"]:checked').val();
      let direccionId = null;
      if (deliveryOption === 'domicilio') {
        direccionId = $('input[name="direccion"]:checked').val();
        if (!direccionId) {
          Swal.fire('Error!', 'Por favor seleccione o agregue una dirección.', 'error');
          return;
        }
      }
      if (!deliveryOption) {
        Swal.fire('Error!', 'Por favor seleccione una opción de entrega.', 'error');
        return;
      }
      Swal.fire({
        title: '¿Estás seguro?',
        text: "¿Deseas finalizar la compra?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, finalizar compra!'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: '/links/cart/checkout',
            type: 'POST',
            data: { deliveryOption, direccionId },
            success: function(response) {
              if (response.success) {
                console.log("Roles: ", response.roles);
                Swal.fire(
                  'Completado!',
                  response.message,
                  'success'
                ).then(() => {
                  if (response.roles === 'admin') {
                    window.location.href = '/links';
                  } else if (response.roles === 'usuario') {
                    window.location.href = '/links/listUsers';
                  } else {
                    window.location.href = '/profile';
                  }
                });
              } else {
                Swal.fire(
                  'Error!',
                  response.message,
                  'error'
                );
              }
            },
            error: function(xhr, status, error) {
              Swal.fire(
                'Error!',
                'No se pudo finalizar la compra. Inténtalo de nuevo.',
                'error'
              );
            }
          });
        }
      });
    });
  });

  // Asegúrate de que el DOM esté completamente cargado antes de intentar adjuntar los controladores de eventos
  document.addEventListener('DOMContentLoaded', (event) => 
  {
    // Selecciona los elementos de radio
    
    const deliveryOption = document.querySelector('input[value="domicilio"]');
    const direccion = document.querySelector('input[value="tienda"]');

    // Selecciona el div
    const container1 = document.querySelector('.progressBarIncomplete');
    const container2 = document.querySelector('.progressBarComplete');

    // Función para manejar el cambio
    const handleChange = () => {
        container1.style.display = 'none'; // Oculta el div
        container2.style.display = 'block';
        
    };

    // Adjunta el controlador de eventos
    deliveryOption.addEventListener('change', handleChange);
    direccion.addEventListener('change', handleChange);
  });



  </script>
</body>
</html>
